-- FreeFem++ v  3.610001 (date jeu. 12 juil. 2018 15:05:23)
 Load: lg_fem lg_mesh lg_mesh3 eigenvalue
    1 : load "ff-IpOpt"(load: loadLibary C:\Program Files (x86)\FreeFem++\\.\ff-IpOpt = 0)
    2 : load "medit"(load: loadLibary C:\Program Files (x86)\FreeFem++\\.\medit = 0)
    3 :
    4 : real T = 1;
    5 : int nn = 20;
    6 : int Nx = nn, Ny = nn;
    7 : int[int] labs = [1, 2, 0, 4];
    8 : mesh Th = square(Nx, Ny, [x, T * y], label = labs);
    9 : fespace Vh(Th, P1);
   10 :
   11 :
   12 : Vh ue = exp(y) * sin(pi * x);
   13 : Vh duex = exp(y) * cos(pi * x) * pi;
   14 : Vh uN = (x == 1) * duex - (x == 0) * duex;
   15 : Vh u0 = ue(x, 0);
   16 :
   17 : //Vh fe = x * (1-x) * y * (1-y);
   18 : Vh fe = 1 * sin(pi * x) * sin(pi * y);
   19 : //Vh fe = (x * (x <= 0.5) + (1 - x) * (x > 0.5)) * y * (1-y);
   20 :
   21 : Vh q = 1;// + x * y;
   22 : Vh g = (1 + pi^2) * ue - fe * q;
   23 : real gamma = 1e-6;
   24 :
   25 :
   26 : func real[int] flip(real[int] uu){
   27 :     Vh u;
   28 :     for (int i = 0; i <= Ny/2; i++){
   29 :         for (int j = 0; j <= Nx; j++){
   30 :             u[][i * (Nx + 1) + j] = uu[(Ny - i) * (Nx + 1) + j];
   31 :             u[][(Ny - i) * (Nx + 1) + j] = uu[i * (Nx + 1) + j];
   32 :         }
   33 :     }
   34 :     return u[];
   35 : }
   36 :
   37 :
   38 : // State equation:
   39 : func real[int] StateProblem(real[int] ff){
   40 :     Vh u, v, f; f[] = ff;
   41 :     Vh rsh = f * q + g;
   42 :
   43 :     solve SpaceTime(u, v, solver = sparsesolver) =
   44 :           int2d(Th)(dy(u)  * v + dx(u)  * dx(v))
   45 :         + int2d(Th)(dy(u0) * v + dx(u0) * dx(v))
   46 :         - int1d(Th, 2, 4) (uN * v)
   47 :         - int2d(Th)(rsh * v)
   48 :         + on(1, u = 0);
   49 :
   50 :     u = u + u0;
   51 :     return u[];
   52 : }
   53 :
   54 : func real[int] StateProblem1(real[int] ff){
   55 :     Vh u, v, f; f[] = ff;
   56 :     Vh rsh = q * f;
   57 :
   58 :     solve SpaceTime(u, v, solver = sparsesolver) =
   59 :           int2d(Th)(dy(u) * v + dx(u) * dx(v))
   60 :         - int2d(Th)(rsh * v)
   61 :         + on(1, u = 0);
   62 :
   63 :     return u[];
   64 : }
   65 :
   66 : func real[int] StateProblem2(){
   67 :     Vh u, v;
   68 :
   69 :     solve SpaceTime(u, v, solver = sparsesolver) =
   70 :           int2d(Th)(dy(u)  * v + dx(u)  * dx(v))
   71 :         + int2d(Th)(dy(u0) * v + dx(u0) * dx(v))
   72 :         - int1d(Th, 2, 4) (uN * v)
   73 :         - int2d(Th)(g * v)
   74 :         + on(1, u = 0);
   75 :
   76 :     u = u + u0;
   77 :     return u[];
   78 : }
   79 :
   80 :
   81 :
   82 :
   83 : // Adjoint equation
   84 : func real[int] AdjointProblem(real[int] uu){
   85 :     Vh p, v, u; u[] = uu;
   86 :     Vh temp = u - ue;
   87 :     Vh pN; pN[] =  flip(temp[]);
   88 :
   89 :     solve SpaceTime(p, v, solver = sparsesolver) =
   90 :           int2d(Th)(dy(p) * v + dx(p) * dx(v))
   91 :         - int1d(Th, 2, 4)(pN * v)
   92 :         + on(1, p = 0);
   93 :
   94 :     return flip(p[]);
   95 : }
   96 :
   97 :
   98 : // Tikhonov functional
   99 : func real J(real[int] ff) {
  100 :     Vh f; f[] = ff;
  101 :     Vh u; u[] = StateProblem(ff);
  102 :     return 0.5 * int1d(Th, 2, 4)((u - ue) * (u - ue)) + 0.5 * gamma * int2d(Th)(f^2);
  103 : }
  104 :
  105 :
  106 : // Gradient of Tikhonov funtional
  107 : func real[int] GradJ(real[int] ff) {
  108 :     Vh f; f[] = ff;
  109 :     real[int] uu = StateProblem(ff);
  110 :     Vh p; p[] = AdjointProblem(uu);
  111 :     Vh res = q * p + gamma * f;
  112 :     return res[];
  113 : }
  114 :
  115 :
  116 : Vh uh, fh = 0;
  117 : Vh ph;
  118 : Vh rh, rh0, rhold;
  119 : Vh dh;
  120 : //******************************
  121 : // CG method
  122 :
  123 :
  124 : uh[] = StateProblem2();
  125 :
  126 : for (int iter = 0; iter < 100; iter++){
  127 :
  128 :
  129 :     ph[] = AdjointProblem(uh[]);
  130 :
  131 :     plot(fh, fe, wait = 1, dim=3d);
  132 :     //cout << "Min and Max: =======>>>>>>> "<<fh[].min<<" +++ " << fh[].max << endl;
  133 :
  134 :     rhold = rh;
  135 :     rh = -(q * ph + gamma * fh); //-Gradient J(f)
  136 :     if (iter == 0){
  137 :         rh0 = rh;
  138 :     }
  139 :
  140 :     //cout << iter << " GradJ: " << int2d(Th)(rh * rh) << endl;
  141 :     cout << iter << " J: " << 0.5 * int2d(Th)((uh - ue)^2) + 0.5 * gamma * int2d(Th)(fh^2) << endl;
  142 :
  143 :     if ( int2d(Th)((uh-ue)^2) < 5e-5){
  144 :         cout << "I love you" << endl;
  145 :         break;
  146 :     }
  147 :
  148 :     if (iter > 0){
  149 :         real beta = int2d(Th)(rh * rh) / int2d(Th)(rhold * rhold);
  150 :         dh = rh + beta * dh;
  151 :         cout << "beta: "  << beta << endl;
  152 :         if(beta>1){
  153 :             cout << "I love you" << endl;
  154 :             //break;
  155 :         }
  156 :     }else{
  157 :         dh = rh;
  158 :     }
  159 :
  160 :     Vh udh; udh[] = StateProblem1(dh[]);
  161 :     real alpha = int2d(Th)(dh * rh) / (int1d(Th, 2, 4)(udh * udh) + gamma * int2d(Th)(dh * dh));
  162 :     cout << "alpha: " << alpha << endl;
  163 :     fh = fh + alpha * dh;
  164 :     uh = uh + alpha * udh;
  165 : }
  166 :
  167 : //
  168 : //******************************
  169 :
  170 :
  171 :
  172 :
  173 : //Vh fh = 0;
  174 : //IPOPT(J, GradJ, fh[], tol = 1e-4, maxiter = 100);
  175 : //NLCG(GradJ, fh[], nbiter = 1000, eps = -1e-6);
  176 : //LinearCG(GradJ, f[], eps = 1e-6);
  177 :
  178 : cout << "J: " << J(fh[]) << endl;
  179 :
  180 :
  181 : //savemesh(Th, "IP1.mesh");
  182 : //savesol("IP1.sol", Th, f);
  183 : //savemesh(Th, "IPe.mesh");
  184 : //savesol("IPe.sol", Th, fe);
  185 :
  186 : Vh delta = fh - fe;
  187 :
  188 : cout << "kq: " << fe[].min << ", " << fe[].max << endl;
  189 : cout << "kq: " << fh[].min << ", " << fh[].max << endl;
  190 : cout << "delta: " << delta[].min << ", " << delta[].max << endl;
  191 : cout << "ss: " << sqrt(int2d(Th)(delta^2)) << endl;
  192 :  sizestack + 1024 =12048  ( 11024 )
 
  -- Square mesh : nb vertices  =441 ,  nb triangles = 800 ,  nb boundary edges 80
  -- Solve :
          min -0.43825  max 1.28026
  -- Solve :
          min -0.415737  max 2.33472e-033
0 J: 0.0338494
  -- Solve :
          min -5.35153e-034  max 0.292967
alpha: 1.2319
  -- Solve :
          min -0.0310258  max 0.0372976
1 J: 0.00103739
beta: 0.00424599
  -- Solve :
          min -0.00650893  max 0.00624944
alpha: 10.925
  -- Solve :
          min -0.000808529  max 0.00572579
2 J: 5.12928e-005
beta: 0.0150911
  -- Solve :
          min -0.00226325  max 6.43902e-036
alpha: 1.47429
  -- Solve :
          min -0.00270346  max 0.00217395
3 J: 6.56716e-005
beta: 0.192528
  -- Solve :
          min -0.000302449  max 0.000301421
alpha: 23.4135
  -- Solve :
          min -0.00176975  max 0.00129723
4 J: 5.17187e-005
beta: 0.196286
  -- Solve :
          min -0.000158396  max 0.000250935
alpha: 9.44159
  -- Solve :
          min -0.0012295  max 0.00173919
5 J: 4.66996e-005
beta: 2.38478
I love you
  -- Solve :
          min -0.000582873  max 1.70588e-005
alpha: 2.00097
  -- Solve :
          min -0.00124443  max 0.00087788
6 J: 5.16429e-005
beta: 0.074336
  -- Solve :
          min -3.75791e-005  max 6.74401e-005
alpha: 50.387
  -- Solve :
          min -0.000424014  max 0.000779077
7 J: 5.0836e-005
beta: 0.749208
  -- Solve :
          min -0.000135676  max 1.18966e-005
alpha: 3.36854
  -- Solve :
          min -0.000486259  max 0.000685187
8 J: 5.24195e-005
beta: 1.20732
I love you
  -- Solve :
          min -5.65328e-005  max 0.000105188
alpha: 7.06899
  -- Solve :
          min -0.000457136  max 0.000668303
9 J: 5.0507e-005
beta: 0.663389
  -- Solve :
          min -0.000148999  max 1.63984e-005
alpha: 3.88296
  -- Solve :
          min -0.00058589  max 0.000552545
10 J: 5.21768e-005
beta: 1.54637
I love you
  -- Solve :
          min -9.09706e-005  max 8.52633e-005
alpha: 17.5933
  -- Solve :
          min -0.000488374  max 0.000462088
11 J: 5.06134e-005
beta: 0.875311
  -- Solve :
          min -0.000170889  max 2.27503e-006
alpha: 2.85465
  -- Solve :
          min -0.000554654  max 0.000202874
12 J: 5.23772e-005
beta: 1.1814
I love you
  -- Solve :
          min -0.000105354  max 0.00017017
alpha: 5.80704
  -- Solve :
          min -0.000412375  max 0.000142903
13 J: 5.25064e-005
beta: 0.608429
  -- Solve :
          min -2.42315e-005  max 0.000234216
alpha: 1.29643
  -- Solve :
          min -0.000288426  max 0.00020498
14 J: 5.15789e-005
beta: 0.198752
  -- Solve :
          min -4.37655e-006  max 3.79844e-005
alpha: 8.63594
  -- Solve :
          min -0.00020663  max 0.000319501
15 J: 5.05847e-005
beta: 5.52333
I love you
  -- Solve :
          min -0.000140683  max 0.00011686
alpha: 4.16128
  -- Solve :
          min -0.000196014  max 0.000166693
16 J: 5.1086e-005
beta: 0.126551
  -- Solve :
          min -4.06322e-005  max 1.27897e-005
alpha: 4.61361
  -- Solve :
          min -0.000221914  max 6.4032e-005
17 J: 5.17223e-005
beta: 1.88401
I love you
  -- Solve :
          min -1.76738e-005  max 4.91734e-005
alpha: 6.94569
  -- Solve :
          min -0.000120886  max 0.000198456
18 J: 5.10353e-005
beta: 1.00749
I love you
  -- Solve :
          min -8.7743e-005  max 2.63323e-005
alpha: 3.02026
  -- Solve :
          min -0.000195985  max 8.69205e-005
19 J: 5.19115e-005
beta: 0.694199
  -- Solve :
          min -1.80738e-005  max 4.39057e-005
alpha: 8.78046
  -- Solve :
          min -4.90553e-005  max 0.000130803
20 J: 5.14665e-005
beta: 0.302681
  -- Solve :
          min -3.74558e-005  max 3.50202e-037
alpha: 1.76357
  -- Solve :
          min -9.84046e-005  max 0.000110795
21 J: 5.17442e-005
beta: 0.778106
  -- Solve :
          min -2.8102e-005  max 1.03794e-005
alpha: 6.13684
  -- Solve :
          min -0.000145581  max 4.80939e-005
22 J: 5.20335e-005
beta: 7.57173
I love you
  -- Solve :
          min -0.000181658  max 0.000137437
alpha: 1.7023
  -- Solve :
          min -0.000241908  max 1.54024e-005
23 J: 5.18799e-005
beta: 1.5775
I love you
  -- Solve :
          min -0.000223841  max 0.000285697
alpha: 0.563636
  -- Solve :
          min -0.000224284  max 6.43883e-005
24 J: 5.14573e-005
beta: 0.493072
  -- Solve :
          min -6.86841e-005  max 0.00018761
alpha: 0.239551
  -- Solve :
          min -0.000209652  max 0.000107223
25 J: 5.12725e-005
beta: 0.655121
  -- Solve :
          min -3.46066e-006  max 0.00016771
alpha: 0.182444
  -- Solve :
          min -0.000196811  max 0.000138253
26 J: 5.11308e-005
beta: 0.784194
  -- Solve :
          min -9.26183e-037  max 0.000160545
alpha: 0.161531
  -- Solve :
          min -0.000189387  max 0.000164641
27 J: 5.10066e-005
beta: 0.991025
  -- Solve :
          min -1.8639e-036  max 0.000172654
alpha: 0.152132
  -- Solve :
          min -0.000180456  max 0.000190574
28 J: 5.08822e-005
beta: 1.24808
I love you
  -- Solve :
          min -3.2133e-036  max 0.00020914
alpha: 0.142903
  -- Solve :
          min -0.000169129  max 0.000218987
29 J: 5.07443e-005
beta: 1.49271
I love you
  -- Solve :
          min -5.60382e-036  max 0.00028271
alpha: 0.129313
  -- Solve :
          min -0.000153968  max 0.000252196
30 J: 5.05817e-005
beta: 1.665
I love you
  -- Solve :
          min -1.00258e-035  max 0.000461348
alpha: 0.111854
  -- Solve :
          min -0.000133224  max 0.000291951
31 J: 5.03857e-005
beta: 1.74857
I love you
  -- Solve :
          min -1.35515e-005  max 0.000814404
alpha: 0.093102
  -- Solve :
          min -0.000104871  max 0.000339304
32 J: 5.01512e-005
beta: 1.76096
I love you
  -- Solve :
          min -0.00014846  max 0.00142574
alpha: 0.0753562
  -- Solve :
          min -6.68108e-005  max 0.000394414
33 J: 4.98774e-005
beta: 1.72763
I love you
  -- Solve :
          min -0.000423221  max 0.00243366
alpha: 0.0599129
  -- Solve :
          min -1.71918e-005  max 0.000459884
34 J: 4.95692e-005
beta: 1.66916
I love you
  -- Solve :
          min -0.000923278  max 0.00400584
alpha: 0.0471951
  -- Solve :
          min -3.38802e-036  max 0.000590651
35 J: 4.92366e-005
beta: 1.59943
I love you
  -- Solve :
          min -0.00175119  max 0.00631785
alpha: 0.0370853
  -- Solve :
          min -5.17066e-036  max 0.000763566
36 J: 4.88939e-005
beta: 1.52704
I love you
  -- Solve :
          min -0.00301252  max 0.00951957
alpha: 0.0292151
  -- Solve :
          min -7.86668e-036  max 0.00096273
37 J: 4.8558e-005
beta: 1.45701
I love you
  -- Solve :
          min -0.00479607  max 0.0136978
alpha: 0.0231518
  -- Solve :
          min -1.11878e-035  max 0.00118599
38 J: 4.82461e-005
beta: 1.392
I love you
  -- Solve :
          min -0.00715372  max 0.0188465
alpha: 0.0184937
  -- Solve :
          min -1.48148e-035  max 0.0014185
39 J: 4.79735e-005
beta: 1.33326
I love you
  -- Solve :
          min -0.0100862  max 0.024855
alpha: 0.0149071
  -- Solve :
          min -1.86488e-035  max 0.00165352
40 J: 4.77518e-005
beta: 1.28118
I love you
  -- Solve :
          min -0.0135396  max 0.0315184
alpha: 0.0121303
  -- Solve :
          min -2.25848e-035  max 0.0018847
41 J: 4.75883e-005
beta: 1.23566
I love you
  -- Solve :
          min -0.0174124  max 0.0385674
alpha: 0.00996515
  -- Solve :
          min -2.65228e-035  max 0.0021066
42 J: 4.74852e-005
beta: 1.19634
I love you
  -- Solve :
          min -0.0215728  max 0.045709
alpha: 0.00826383
  -- Solve :
          min -3.03762e-035  max 0.00231509
43 J: 4.74409e-005
beta: 1.16272
I love you
  -- Solve :
          min -0.025878  max 0.0526661
alpha: 0.00691718
  -- Solve :
          min -3.4077e-035  max 0.00250739
44 J: 4.74504e-005
beta: 1.13424
I love you
  -- Solve :
          min -0.0301936  max 0.0592086
alpha: 0.00584433
  -- Solve :
          min -3.75782e-035  max 0.00268207
45 J: 4.7507e-005
beta: 1.11033
I love you
  -- Solve :
          min -0.0344064  max 0.06517
alpha: 0.00498497
  -- Solve :
          min -4.08525e-035  max 0.00283883
46 J: 4.76031e-005
beta: 1.09039
I love you
  -- Solve :
          min -0.0384318  max 0.0704501
alpha: 0.00429348
  -- Solve :
          min -4.38895e-035  max 0.00297821
47 J: 4.77312e-005
beta: 1.07387
I love you
  -- Solve :
          min -0.0422139  max 0.0750075
alpha: 0.00373478
  -- Solve :
          min -4.66917e-035  max 0.00310132
48 J: 4.78847e-005
beta: 1.06023
I love you
  -- Solve :
          min -0.0457221  max 0.0788458
alpha: 0.00328143
  -- Solve :
          min -4.92701e-035  max 0.00320956
49 J: 4.80579e-005
beta: 1.04898
I love you
  -- Solve :
          min -0.0489452  max 0.081999
alpha: 0.00291169
  -- Solve :
          min -5.16408e-035  max 0.00330444
50 J: 4.82463e-005
beta: 1.03969
I love you
  -- Solve :
          min -0.0518852  max 0.0845184
alpha: 0.00260821
  -- Solve :
          min -5.38215e-035  max 0.00338742
51 J: 4.84462e-005
beta: 1.03198
I love you
  -- Solve :
          min -0.0545522  max 0.0864626
alpha: 0.00235717
  -- Solve :
          min -9.56727e-006  max 0.00345986
52 J: 4.8655e-005
beta: 1.02554
I love you
  -- Solve :
          min -0.0569605  max 0.0878912
alpha: 0.00214763
  -- Solve :
          min -5.28853e-005  max 0.00352297
53 J: 4.88703e-005
beta: 1.02013
I love you
  -- Solve :
          min -0.0591264  max 0.089092
alpha: 0.00197099
  -- Solve :
          min -9.59514e-005  max 0.00357781
54 J: 4.90905e-005
beta: 1.01553
I love you
  -- Solve :
          min -0.0610663  max 0.0898973
alpha: 0.00182059
  -- Solve :
          min -0.000138682  max 0.00362527
55 J: 4.93143e-005
beta: 1.0116
I love you
  -- Solve :
          min -0.0627964  max 0.0903474
alpha: 0.00169126
  -- Solve :
          min -0.000181013  max 0.00366617
56 J: 4.95405e-005
beta: 1.00821
I love you
  -- Solve :
          min -0.0643322  max 0.0904834
alpha: 0.00157904
  -- Solve :
          min -0.000222896  max 0.00370118
57 J: 4.97683e-005
beta: 1.00527
I love you
  -- Solve :
          min -0.0656881  max 0.0903422
alpha: 0.00148084
  -- Solve :
          min -0.000264291  max 0.0037309
58 J: 4.99968e-005
beta: 1.00271
I love you
  -- Solve :
          min -0.0668779  max 0.0899572
alpha: 0.00139427
  -- Solve :
          min -0.000305169  max 0.00375586
59 J: 5.02255e-005
beta: 1.00045
I love you
  -- Solve :
          min -0.0679144  max 0.0893581
alpha: 0.00131742
  -- Solve :
          min -0.000345505  max 0.00377652
60 J: 5.04539e-005
beta: 0.99847
  -- Solve :
          min -0.0688097  max 0.0885717
alpha: 0.0012488
  -- Solve :
          min -0.000385283  max 0.0037933
61 J: 5.06815e-005
beta: 0.996714
  -- Solve :
          min -0.069575  max 0.087622
alpha: 0.00118718
  -- Solve :
          min -0.00042449  max 0.00380655
62 J: 5.09079e-005
beta: 0.995157
  -- Solve :
          min -0.0702206  max 0.0865308
alpha: 0.00113159
  -- Solve :
          min -0.000463117  max 0.0038166
63 J: 5.1133e-005
beta: 0.993771
  -- Solve :
          min -0.0707564  max 0.0853172
alpha: 0.00108119
  -- Solve :
          min -0.00050116  max 0.00382375
64 J: 5.13564e-005
beta: 0.992536
  -- Solve :
          min -0.0711912  max 0.0839987
alpha: 0.00103533
  -- Solve :
          min -0.000538615  max 0.00382826
65 J: 5.15779e-005
beta: 0.991433
  -- Solve :
          min -0.0715336  max 0.0825908
alpha: 0.000993418
  -- Solve :
          min -0.000575554  max 0.00383036
66 J: 5.17974e-005
beta: 0.990448
  -- Solve :
          min -0.0717913  max 0.0811073
alpha: 0.000954995
  -- Solve :
          min -0.000616646  max 0.00383026
67 J: 5.20147e-005
beta: 0.989565
  -- Solve :
          min -0.0719714  max 0.0795607
alpha: 0.000919649
  -- Solve :
          min -0.000657122  max 0.00382817
68 J: 5.22298e-005
beta: 0.988776
  -- Solve :
          min -0.0720808  max 0.0779621
alpha: 0.000887038
  -- Solve :
          min -0.000696985  max 0.00382424
69 J: 5.24425e-005
beta: 0.988069
  -- Solve :
          min -0.0721256  max 0.0763215
alpha: 0.000856863
  -- Solve :
          min -0.000736239  max 0.00381865
70 J: 5.26529e-005
beta: 0.987437
  -- Solve :
          min -0.0721115  max 0.0746476
alpha: 0.000828869
  -- Solve :
          min -0.000774889  max 0.00381153
71 J: 5.28607e-005
beta: 0.986872
  -- Solve :
          min -0.0720438  max 0.0729483
alpha: 0.000802834
  -- Solve :
          min -0.000812942  max 0.00380301
72 J: 5.30661e-005
beta: 0.986369
  -- Solve :
          min -0.0719275  max 0.0712307
alpha: 0.000778565
  -- Solve :
          min -0.000850404  max 0.00379322
73 J: 5.3269e-005
beta: 0.98592
  -- Solve :
          min -0.0717671  max 0.069501
alpha: 0.000755892
  -- Solve :
          min -0.000887285  max 0.00378226
74 J: 5.34694e-005
beta: 0.985523
  -- Solve :
          min -0.0715669  max 0.0677646
alpha: 0.000734667
  -- Solve :
          min -0.000923592  max 0.00377023
75 J: 5.36672e-005
beta: 0.985172
  -- Solve :
          min -0.0713306  max 0.0660264
alpha: 0.000714758
  -- Solve :
          min -0.000959335  max 0.00375723
76 J: 5.38626e-005
beta: 0.984864
  -- Solve :
          min -0.0710621  max 0.0642908
alpha: 0.00069605
  -- Solve :
          min -0.000994524  max 0.00374333
77 J: 5.40554e-005
beta: 0.984595
  -- Solve :
          min -0.0707645  max 0.0625616
alpha: 0.00067844
  -- Solve :
          min -0.00102917  max 0.00372862
78 J: 5.42458e-005
beta: 0.984363
  -- Solve :
          min -0.070441  max 0.0608419
alpha: 0.000661834
  -- Solve :
          min -0.00106328  max 0.00371316
79 J: 5.44337e-005
beta: 0.984164
  -- Solve :
          min -0.0700945  max 0.0591349
alpha: 0.000646152
  -- Solve :
          min -0.00109686  max 0.00369701
80 J: 5.46191e-005
beta: 0.983997
  -- Solve :
          min -0.0697276  max 0.0574429
alpha: 0.00063132
  -- Solve :
          min -0.00112994  max 0.00368024
81 J: 5.48022e-005
beta: 0.983859
  -- Solve :
          min -0.0693427  max 0.0557681
alpha: 0.000617272
  -- Solve :
          min -0.00116251  max 0.0036629
82 J: 5.49828e-005
beta: 0.983748
  -- Solve :
          min -0.0689422  max 0.0541124
alpha: 0.000603947
  -- Solve :
          min -0.00119459  max 0.00364504
83 J: 5.51612e-005
beta: 0.983663
  -- Solve :
          min -0.068528  max 0.0524775
alpha: 0.000591293
  -- Solve :
          min -0.00122618  max 0.00362671
84 J: 5.53372e-005
beta: 0.983602
  -- Solve :
          min -0.0681023  max 0.0508646
alpha: 0.00057926
  -- Solve :
          min -0.00125731  max 0.00360794
85 J: 5.5511e-005
beta: 0.983563
  -- Solve :
          min -0.0676667  max 0.049275
alpha: 0.000567804
  -- Solve :
          min -0.00128797  max 0.00358878
86 J: 5.56826e-005
beta: 0.983546
  -- Solve :
          min -0.0672229  max 0.0477094
alpha: 0.000556886
  -- Solve :
          min -0.00131819  max 0.00356927
87 J: 5.58519e-005
beta: 0.98355
  -- Solve :
          min -0.0667725  max 0.0461687
alpha: 0.000546467
  -- Solve :
          min -0.00134797  max 0.00354942
88 J: 5.60192e-005
beta: 0.983572
  -- Solve :
          min -0.0663168  max 0.0446534
alpha: 0.000536516
  -- Solve :
          min -0.00137731  max 0.00352928
89 J: 5.61843e-005
beta: 0.983613
  -- Solve :
          min -0.0658573  max 0.0431641
alpha: 0.000527
  -- Solve :
          min -0.00140624  max 0.00350888
90 J: 5.63474e-005
beta: 0.983671
  -- Solve :
          min -0.065395  max 0.0417009
alpha: 0.000517893
  -- Solve :
          min -0.00143476  max 0.00348823
91 J: 5.65084e-005
beta: 0.983746
  -- Solve :
          min -0.0649312  max 0.0402641
alpha: 0.000509167
  -- Solve :
          min -0.00146288  max 0.00346736
92 J: 5.66675e-005
beta: 0.983837
  -- Solve :
          min -0.0644669  max 0.0388537
alpha: 0.000500801
  -- Solve :
          min -0.00149061  max 0.0034463
93 J: 5.68247e-005
beta: 0.983942
  -- Solve :
          min -0.064003  max 0.0374698
alpha: 0.00049277
  -- Solve :
          min -0.00151797  max 0.00342506
94 J: 5.69799e-005
beta: 0.984063
  -- Solve :
          min -0.0635404  max 0.0361123
alpha: 0.000485057
  -- Solve :
          min -0.00154495  max 0.00340366
95 J: 5.71333e-005
beta: 0.984197
  -- Solve :
          min -0.0630799  max 0.0347809
alpha: 0.00047764
  -- Solve :
          min -0.00157157  max 0.0033972
96 J: 5.7285e-005
beta: 0.984345
  -- Solve :
          min -0.0626224  max 0.0334756
alpha: 0.000470505
  -- Solve :
          min -0.00159785  max 0.00339938
97 J: 5.74348e-005
beta: 0.984507
  -- Solve :
          min -0.0621684  max 0.0321959
alpha: 0.000463634
  -- Solve :
          min -0.00162378  max 0.00340127
98 J: 5.7583e-005
beta: 0.98468
  -- Solve :
          min -0.0617186  max 0.0309415
alpha: 0.000457012
  -- Solve :
          min -0.00164938  max 0.00340286
99 J: 5.77295e-005
beta: 0.984866
  -- Solve :
          min -0.0612737  max 0.029712
alpha: 0.000450627
  -- Solve :
          min -0.0112648  max 1.70045
J: 1.69267e-005
kq: 0, 1
kq: -0.0519541, 0.686866
delta: -0.381598, 0.686866
ss: 0.228105
times: compile 0.544s, execution 12.743s,  mpirank:0
 ######## We forget of deleting   7565 Nb pointer,   0Bytes  ,  mpirank 0, memory leak =0
 CodeAlloc : nb ptr  3845,  size :428112 mpirank: 0
Ok: Normal End
 try getConsole D:\Study\HUST\FEM\heatsource\FreeFem++\HeatSource1D_S1.edp
