-- FreeFem++ v  3.610001 (date jeu. 12 juil. 2018 15:05:23)
 Load: lg_fem lg_mesh lg_mesh3 eigenvalue
    1 : load "medit"(load: loadLibary C:\Program Files (x86)\FreeFem++\\.\medit = 0)
    2 :
    3 : real T = 1;
    4 : int nn = 100;
    5 : int Nx = nn, Ny = nn;
    6 : int[int] labs = [1, 2, 0, 4];
    7 : mesh Th = square(Nx, Ny, [x, T * y], label = labs);
    8 : fespace Vh(Th, P1);
    9 :
   10 : Vh ue = exp(y) * sin(pi * x);
   11 : Vh duex = exp(y) * cos(pi * x) * pi;
   12 : Vh uN = (x == 1) * duex - (x == 0) * duex;
   13 : Vh u0 = ue(x, 0);
   14 : Vh F = (1 + pi^2) * ue;
   15 : Vh u, v;
   16 :
   17 : solve SpaceTime(u, v, solver = GMRES) =
   18 :           int2d(Th)(dy(u) * v + dx(u) * dx(v))
   19 :         + int2d(Th)(dy(u0) * v + dx(u0) * dx(v))
   20 :         - int1d(Th, 2, 4)(uN * v)
   21 :         - int2d(Th)(F * v) + on(1, u = 0);
   22 : u = u + u0;
   23 :
   24 :
   25 : plot(ue, wait = 1, dim=3d);
   26 : plot(u, ue, wait = 1, dim=3d);
   27 : plot(u, ue, wait = 1, dim=3d);
   28 :
   29 : Vh uu = u;
   30 : Vh delta = uu - ue;
   31 :
   32 : cout << "kq: " << ue[].min << ", " << ue[].max << endl;
   33 : cout << "kq: " << uu[].min << ", " << uu[].max << endl;
   34 : cout << "kq: " << delta[].min << ", " << delta[].max << endl;
   35 : cout << "ss: " << sqrt(int2d(Th)(delta^2)) << endl; sizestack + 1024 =5240  ( 4216 )
 
  -- Square mesh : nb vertices  =10201 ,  nb triangles = 20000 ,  nb boundary edges 400
GMRES converges: 6269 3.92047e-007 0.392104 9.99854e-007 < 1e-006
  -- Solve :
          min -0.00226131  max 1.71694
kq: 0, 2.71828
kq: -0.00226131, 2.71694
kq: -0.00226131, 0.00175604
ss: 0.000472564
times: compile 0.111s, execution 15.741s,  mpirank:0
 ######## We forget of deleting   67 Nb pointer,   0Bytes  ,  mpirank 0, memory leak =0
 CodeAlloc : nb ptr  3037,  size :388904 mpirank: 0
Ok: Normal End
 try getConsole D:\Study\HUST\FEM\heatsource\FreeFem++\SpaceTime1D.edp
