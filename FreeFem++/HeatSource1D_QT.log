-- FreeFem++ v  3.610001 (date jeu. 12 juil. 2018 15:05:23)
 Load: lg_fem lg_mesh lg_mesh3 eigenvalue
    1 : load "ff-IpOpt"(load: loadLibary C:\Program Files (x86)\FreeFem++\\.\ff-IpOpt = 0)
    2 : load "medit"(load: loadLibary C:\Program Files (x86)\FreeFem++\\.\medit = 0)
    3 :
    4 : real T = 1;
    5 : int nn = 50;
    6 : int Nx = nn, Ny = nn;
    7 : int[int] labs = [1, 2, 0, 4];
    8 : mesh Th = square(Nx, Ny, [x, T * y], label = labs);
    9 : fespace Vh(Th, P1);
   10 :
   11 :
   12 : // ***** DATA ***** //
   13 : Vh ue = exp(y) * sin(pi * x);
   14 : Vh uD = 0;
   15 : Vh u0 = sin(pi * x);
   16 :
   17 : Vh fe = y^2;//sin(pi * y);
   18 :
   19 : Vh q = 2 + x^2 + y^2;
   20 : Vh g = (1 + pi^2) * ue(x, y) - fe(x, y) * q(x,y);
   21 : real gamma = 1e-1;
   22 :
   23 : // The final overdetermination
   24 : real[int] w(Nx + 1);
   25 : for (int i = 0; i <= Nx; i++){
   26 :     w[i] = ue(i * 1.0 / Nx, T);
   27 : }
   28 :
   29 : real[int] ffe(Ny + 1);
   30 : for (int i = 0; i <= Ny; i++){
   31 :     ffe[i] = fe(0, 1.0 * i / Ny);
   32 : }
   33 :
   34 : cout << ffe << endl;
   35 :
   36 :
   37 :
   38 : // ***** Functions to modify matrix ***** //
   39 :
   40 : // ** Change the time direction
   41 : func real[int] FlipTimeDirection(real[int] mat){
   42 :     Vh res;
   43 :     for (int i = 0; i <= Ny/2; i++){
   44 :         for (int j = 0; j <= Nx; j++){
   45 :             res[][i * (Nx + 1) + j] = mat[(Ny - i) * (Nx + 1) + j];
   46 :             res[][(Ny - i) * (Nx + 1) + j] = mat[i * (Nx + 1) + j];
   47 :         }
   48 :     }
   49 :     return res[];
   50 : }
   51 :
   52 : // ** To change vec(t) into vec(x, t) depending on the mesh
   53 : func real[int] TimeToQ(real[int] mat){
   54 :     Vh res = 0;
   55 :     for (int i = 0; i <= Ny; i++){
   56 :         for (int j = 0; j <= Nx; j++)
   57 :         res[][i * (Nx + 1) + j] = mat[i];
   58 :     }
   59 :     return res[];
   60 : }
   61 :
   62 : // ** To change vec(x) into vec(x, t) depending on the mesh
   63 : func real[int] SpaceToQ(real[int] mat){
   64 :     Vh res = 0;
   65 :     for (int i = 0; i <= Nx; i++){
   66 :         for (int j = 0; j <= Ny; j++)
   67 :         res[][j * (Nx + 1) + i] = mat[i];
   68 :     }
   69 :     return res[];
   70 : }
   71 :
   72 : // ** Get values from final time (t = T)
   73 : func real[int] GetFinalTime(real[int] mat){
   74 :     real[int] res(Nx + 1);
   75 :     for (int i = 0; i <= Nx; i++){
   76 :         res[i] = mat[Ny * (Nx + 1) + i];
   77 :     }
   78 :     return res;
   79 : }
   80 :
   81 : // ** Get values from initial time (t = 0)
   82 : func real[int] GetInitialTime(real[int] mat){
   83 :     real[int] res(Nx + 1);
   84 :     for (int i = 0; i <= Nx; i++){
   85 :         res[i] = mat[i];
   86 :     }
   87 :     return res;
   88 : }
   89 :
   90 : // ** Integrate on space
   91 : //   The result is a vector with respect to (t)
   92 : func real[int] IntegralOnSpace(real[int] mat){
   93 :     real[int] res(Ny + 1);
   94 :     Vh temp = 0;
   95 :     for (int i = 0; i <= Ny; i++){
   96 :         for (int j = 0; j <= Nx; j++){
   97 :             temp[][j] = mat[i * (Nx + 1) + j];
   98 :         }
   99 :         res[i] = int1d(Th, 1)(temp);
  100 :     }
  101 :     return res;
  102 : }
  103 :
  104 : // ** Inner product on time domain of vec1(t) and vec2(t)
  105 : func real InnerProductOnTime(real[int] vec1, real[int] vec2){
  106 :     real[int] vec(Ny + 1);
  107 :     for (int i = 0; i <= Ny; i++){
  108 :         vec[i] = vec1[i] * vec2[i];
  109 :     }
  110 :
  111 :     // Take int1d on x = 0 (label = 4);
  112 :     Vh res = 0;
  113 :     for (int i = 0; i <= Ny; i++){
  114 :         res[][i * (Nx + 1)] = vec[i];
  115 :     }
  116 :
  117 :     return int1d(Th, 4)(res);
  118 : }
  119 :
  120 : // ** Inner product on time domain of vec1(x) and vec2(x)
  121 : func real InnerProductOnSpace(real[int] vec1, real[int] vec2){
  122 :     real[int] vec(Nx + 1);
  123 :     for (int i = 0; i <= Nx; i++){
  124 :         vec[i] = vec1[i] * vec2[i];
  125 :     }
  126 :
  127 :     // Take int1d on x = 0 (label = 4);
  128 :     Vh res = 0;
  129 :     for (int i = 0; i <= Nx; i++){
  130 :         res[][i] = vec[i];
  131 :     }
  132 :
  133 :     return int1d(Th, 1)(res);
  134 : }
  135 :
  136 :
  137 :
  138 :
  139 : // ***** State and Adjoint problems ***** //
  140 :
  141 : // * State problem
  142 : func real[int] StateProblem(real[int] ff){
  143 :     Vh u, v, f; f[] = TimeToQ(ff);
  144 :     Vh rsh = q * f + g;
  145 :
  146 :     solve SpaceTime(u, v, solver = sparsesolver) =
  147 :           int2d(Th)(dy(u)  * v + dx(u)  * dx(v))
  148 :         + int2d(Th)(dy(u0) * v + dx(u0) * dx(v))
  149 :         - int2d(Th)(rsh * v)
  150 :         + on(1, 2, 4, u = 0);
  151 :
  152 :     u = u + u0;
  153 :     return u[];
  154 : }
  155 :
  156 : // * Problem 1
  157 : func real[int] StateProblem1(real[int] ff){
  158 :     Vh u, v, f; f[] = ff;
  159 :     Vh rsh = q * f;
  160 :
  161 :     solve SpaceTime(u, v, solver = sparsesolver) =
  162 :           int2d(Th)(dy(u) * v + dx(u) * dx(v))
  163 :         - int2d(Th)(rsh * v)
  164 :         + on(1, 2, 4, u = 0);
  165 :
  166 :     return u[];
  167 : }
  168 :
  169 : // * Problem 2
  170 : func real[int] StateProblem2(){
  171 :     Vh u, v;
  172 :
  173 :     solve SpaceTime(u, v, solver = sparsesolver) =
  174 :           int2d(Th)(dy(u)  * v + dx(u)  * dx(v))
  175 :         + int2d(Th)(dy(u0) * v + dx(u0) * dx(v))
  176 :         - int2d(Th)(g * v)
  177 :         + on(1, 2, 4, u = 0);
  178 :
  179 :     u = u + u0;
  180 :     return u[];
  181 : }
  182 :
  183 :
  184 : // * Adjoint problem
  185 : func real[int] AdjointProblem(real[int] uu){
  186 :     Vh p, v;
  187 :     real[int] delta = GetFinalTime(uu) - w;
  188 :     Vh pT = 0;
  189 :     for (int i = 0; i <= Nx; i++){
  190 :         pT[][i] = delta[i];
  191 :     }
  192 :     //cout << "delta min and max: " << delta.min << ", " << delta.max << endl;
  193 :     cout << "pT min and max: " << pT[].min << ", " << pT[].max << endl;
  194 :     solve SpaceTime(p, v, solver = sparsesolver) =
  195 :           int2d(Th)(dy(p) * v + dx(p) * dx(v))
  196 :         + int2d(Th)(dy(pT) * v + dx(pT) * dx(v))
  197 :         + on(2, 4, p = 0) + on(1, p = 0);
  198 :     Vh res = p + pT;
  199 :     //return p[];
  200 :     return FlipTimeDirection(res[]);
  201 : }
  202 :
  203 :
  204 : // Tikhonov functional
  205 : func real J(real[int] ff) {
  206 :     Vh u; u[] = StateProblem(ff);
  207 :     real[int] delta = GetFinalTime(u[]) - w;
  208 :     return 0.5 * InnerProductOnTime(delta, delta) + 0.5 * gamma * InnerProductOnTime(ff, ff);
  209 : }
  210 :
  211 :
  212 : // Gradient of Tikhonov funtional
  213 : func real[int] GradJ(real[int] ff) {
  214 :     real[int] uu = StateProblem(ff);
  215 :     Vh p; p[] = AdjointProblem(uu);
  216 :     Vh qp = p * q;
  217 :     real[int] res = IntegralOnSpace(qp[]) + gamma * ff;
  218 :     return res;
  219 : }
  220 :
  221 : func real Draw(real[int] f1, real[int] f2){
  222 :     Vh ff1 = 0; ff1[] = TimeToQ(f1);
  223 :     Vh ff2 = 0; ff2[] = TimeToQ(f2);
  224 :     /*for (int i = 0; i <= Ny; i++){
  225 :         ff1[][i * (Nx + 1)] = f1[i];
  226 :         ff2[][i * (Nx + 1)+2] = f2[i];
  227 :     }*/
  228 :     plot(ff1, ff2, wait = true, dim = 3);
  229 :     return 1;
  230 : }
  231 :
  232 : /*
  233 : real[int] fh(Ny + 1);
  234 : //fh = ffe;
  235 : IPOPT(J, GradJ, fh, tol = 0.5e-4);
  236 : real[int] test = ffe - fh;
  237 : cout << "(ffe - fh) min and max: " << test.min << ", " << test.max << endl;
  238 : Draw(ffe, fh);
  239 : */
  240 :
  241 :
  242 : //******************************
  243 : // CG method
  244 :
  245 : Vh uh, ph;
  246 : real[int] fh(Ny + 1), rh(Ny + 1), dh(Ny + 1), rhold(Ny + 1);
  247 : //fh = ffe;
  248 : uh[] = StateProblem2() + StateProblem1(TimeToQ(fh));
  249 : //cout << GetFinalTime(uh[]) << endl;
  250 : //cout << w << endl;
  251 : plot(uh, ue, wait = 1, dim=3d);
  252 :
  253 : for (int iter = 0; iter < 100; iter++){
  254 :     cout << endl << endl << endl << endl;
  255 :     cout << "==========================>>>>>>>>>>>>>> " << iter << endl;
  256 :     real[int] test = ffe - fh;
  257 :     cout << "(ffe - fh) min and max: " << test.min << ", " << test.max << endl;
  258 :     Draw(ffe, fh);
  259 :     //cout << endl << fh << endl << endl;
  260 :     cout << endl << "Adjoint problem" << endl;
  261 :     ph[] = AdjointProblem(uh[]);
  262 :     //cout << GetInitialTime(ph[]) << endl;
  263 :     real[int] delta = GetFinalTime(uh[]) - w;
  264 :     cout << delta << endl;
  265 :     cout << GetFinalTime(ph[]) << endl;
  266 :     //plot(uh, ue, wait = 1, dim=3d);
  267 :
  268 :     rhold = rh;
  269 :     Vh qp = q * ph;
  270 :     rh = -IntegralOnSpace(qp[]) - gamma * fh;
  271 :     //cout << endl << rh << endl << endl;
  272 :     if (iter > 0){
  273 :         real beta = InnerProductOnTime(rh, rh) / InnerProductOnTime(rhold, rhold);
  274 :         dh = rh + beta * dh;
  275 :         cout << "beta: "  << beta << endl;
  276 :     }else{
  277 :         dh = rh;
  278 :     }
  279 :     //cout << endl << dh << endl << endl;
  280 :     cout << endl << "Solution udh" << endl;
  281 :     Vh udh; udh[] = StateProblem1(TimeToQ(dh));
  282 :     real[int] tem = GetFinalTime(udh[]);
  283 :
  284 :     real alpha = InnerProductOnTime(rh, rh) / (InnerProductOnSpace(tem, tem) + gamma * InnerProductOnTime(dh, dhÈ™ßt±Ë?));
  285 :     cout << endl << endl;
  286 :     cout << "rh ===>>> " << rh.min <<", " << rh.max << endl;
  287 :     cout << "alpha: " << alpha << endl;
  288 :     cout << "Norm (rh, rh): " << InnerProductOnTime(rh, rh) << ", " << InnerProductOnTime(dh, rh)<< endl;
  289 :     Vh temp; temp[] = FlipTimeDirection(udh[]);
  290 :     cout << "Mau 1: " << int1d(Th, 1)(temp * temp) << ", " << InnerProductOnSpace(tem, tem) << endl;
  291 :     cout << "Mau 2: " << gamma * InnerProductOnTime(dh, dh) << endl;
  292 :
  293 :     fh = fh + alpha * dh;
  294 :     //uh = uh + alpha * udh;
  295 :     uh[] = StateProblem2() + StateProblem1(TimeToQ(fh));
  296 : }
  297 :
  298 :
  299 : plot(ue, dim=3, wait =1);
  300 : plot(uh, dim=3, wait =1);
  301 : plot(uh, ue, dim=3, wait =1);
  302 :
  303 : //
  304 : //******************************
  305 :
  306 :
  307 :
  308 : //Vh fh = 0;
  309 : //IPOPT(J, GradJ, fh[], tol = 1e-6);
  310 : //NLCG(GradJ, fh[], nbiter = 1000, eps = -1e-6);
  311 : //LinearCG(GradJ, f[], eps = 1e-6);
  312 :
  313 : //cout << "J: " << J(fh[]) << endl;
  314 :
  315 :
  316 : //savemesh(Th, "IP1.mesh");
  317 : //savesol("IP1.sol", Th, f);
  318 : //savemesh(Th, "IPe.mesh");
  319 : //savesol("IPe.sol", Th, fe);
  320 :
  321 : //plot(fe, wait = true, dim = 3);
  322 : //plot(fh, wait = true, dim = 3);
  323 : //plot(fh, fe, wait = true, dim = 3);
  324 :
  325 : //Vh delta = fh - fe;
  326 :
  327 : //cout << "kq: " << fe[].min << ", " << fe[].max << endl;
  328 : //cout << "kq: " << fh[].min << ", " << fh[].max << endl;
  329 : //cout << "delta: " << delta[].min << ", " << delta[].max << endl;
  330 : //cout << "ss: " << sqrt(int2d(Th)(delta^2)) << endl;
  331 :  sizestack + 1024 =9976  ( 8952 )
 
  -- Square mesh : nb vertices  =2601 ,  nb triangles = 5000 ,  nb boundary edges 200
51
          0     0.0004  0.0016  0.0036  0.0064
        0.01    0.0144  0.0196  0.0256  0.0324
        0.04    0.0484  0.0576  0.0676  0.0784
        0.09    0.1024  0.1156  0.1296  0.1444
        0.16    0.1764  0.1936  0.2116  0.2304
        0.25    0.2704  0.2916  0.3136  0.3364
        0.36    0.3844  0.4096  0.4356  0.4624
        0.49    0.5184  0.5476  0.5776  0.6084
        0.64    0.6724  0.7056  0.7396  0.7744
        0.81    0.8464  0.8836  0.9216  0.9604
          1
  -- Solve :
          min 0  max 0
  -- Solve :
          min -2.01339e-034  max 1.39762
 
 
 
 
==========================>>>>>>>>>>>>>> 0
(ffe - fh) min and max: 0, 1
 
Adjoint problem
pT min and max: -0.320795, 4.10813e-032
  -- Solve :
          min -0.270608  max 2.70553e-033
51
        4.108127131e-032        -0.02572926608  -0.05020455728  -0.07346191027  -0.09553452573
        -0.1164529327   -0.1362451389   -0.1549367675   -0.1725511817   -0.1891095973
        -0.2046311847   -0.2191331608   -0.2326308709   -0.2451378631   -0.2566659536
        -0.2672252858   -0.2768243818   -0.2854701883   -0.2931681176   -0.2999220822
        -0.305734527    -0.310606456    -0.3145374564   -0.3175257198   -0.319568061
        -0.3206599345   -0.32079545     -0.3199673866   -0.3181672065   -0.3153850683
        -0.3116098413   -0.3068291201   -0.3010292406   -0.2941952981   -0.2863111675
        -0.2773595266   -0.2673218829   -0.2561786046   -0.2439089565   -0.2304911407
        -0.2159023441   -0.200118793    -0.1831158145   -0.1648679066   -0.1453488185
        -0.1245316391   -0.1023888985   -0.07889267961  -0.05401474353  -0.02772666793
        -2.104218845e-016
51
        4.114054501e-032        -0.02572926608  -0.05020455728  -0.07346191027  -0.09553452573
        -0.1164529327   -0.1362451389   -0.1549367675   -0.1725511817   -0.1891095973
        -0.2046311847   -0.2191331608   -0.2326308709   -0.2451378631   -0.2566659536
        -0.2672252858   -0.2768243818   -0.2854701883   -0.2931681176   -0.2999220822
        -0.305734527    -0.310606456    -0.3145374564   -0.3175257198   -0.319568061
        -0.3206599345   -0.32079545     -0.3199673866   -0.3181672065   -0.3153850683
        -0.3116098413   -0.3068291201   -0.3010292406   -0.2941952981   -0.2863111675
        -0.2773595266   -0.2673218829   -0.2561786046   -0.2439089565   -0.2304911407
        -0.2159023441   -0.200118793    -0.1831158145   -0.1648679066   -0.1453488185
        -0.1245316391   -0.1023888985   -0.07889267961  -0.05401474353  -0.02772666793
        -2.104218845e-016
 
Solution udh
  -- Solve :
          min -1.4347e-038  max 0.133898
 
 
rh ===>>> 2.70743e-005, 0.715902
alpha: 1.92928
Norm (rh, rh): 0.0242703, 0.0242703
Mau 1: 0.0101459, 0.0101529
Mau 2: 0.00242703
  -- Solve :
          min -2.76794e-038  max 0.258327
  -- Solve :
          min -2.01339e-034  max 1.39762
 
 
 
 
==========================>>>>>>>>>>>>>> 1
(ffe - fh) min and max: -0.381175, 0.47073
 
Adjoint problem
pT min and max: -0.0629138, 5.2463e-032
  -- Solve :
          min -0.0501738  max 5.01669e-034
51
        5.246304895e-032        -0.002965710809 -0.006160748691 -0.009537909228 -0.01305231252
        -0.01666141238  -0.02032499279  -0.02400515356  -0.02766628723  -0.03127504877
        -0.03480031999  -0.03821316998  -0.04148681308  -0.04459656574  -0.04751980332
        -0.05023591812  -0.05272627948  -0.05497419702  -0.05696488768  -0.05868544752
        -0.06012482887  -0.06127382344  -0.06212505209  -0.06267296162  -0.06291382923
        -0.06284577495  -0.06246878253  -0.0617847291   -0.06079742396  -0.05951265673
        -0.05793825523  -0.05608415324  -0.05396246835  -0.05158759013  -0.04897627865
        -0.04614777355  -0.04312391374  -0.03992926754  -0.03659127356  -0.03314039193
        -0.02961026596  -0.02603789385  -0.02246381033  -0.01893227779  -0.01549148642
        -0.01219376292  -0.009095787022 -0.006258815139 -0.003748910229 -0.001637176809
        -2.104218845e-016
51
        5.247324162e-032        -0.002965710809 -0.006160748691 -0.009537909228 -0.01305231252
        -0.01666141238  -0.02032499279  -0.02400515356  -0.02766628723  -0.03127504877
        -0.03480031999  -0.03821316998  -0.04148681308  -0.04459656574  -0.04751980332
        -0.05023591812  -0.05272627948  -0.05497419702  -0.05696488768  -0.05868544752
        -0.06012482887  -0.06127382344  -0.06212505209  -0.06267296162  -0.06291382923
        -0.06284577495  -0.06246878253  -0.0617847291   -0.06079742396  -0.05951265673
        -0.05793825523  -0.05608415324  -0.05396246835  -0.05158759013  -0.04897627865
        -0.04614777355  -0.04312391374  -0.03992926754  -0.03659127356  -0.03314039193
        -0.02961026596  -0.02603789385  -0.02246381033  -0.01893227779  -0.01549148642
        -0.01219376292  -0.009095787022 -0.006258815139 -0.003748910229 -0.001637176809
        -2.104218845e-016
beta: 0.000273954
 
Solution udh
  -- Solve :
          min -0.00209607  max 1.5893e-040
 
 
rh ===>>> -0.0160098, -3.59536e-007
alpha: 2.08251
Norm (rh, rh): 6.64894e-006, 6.54117e-006
Mau 1: 2.54743e-006, 2.54923e-006
Mau 2: 6.43521e-007
  -- Solve :
          min -2.73524e-038  max 0.253962
  -- Solve :
          min -2.01339e-034  max 1.39762
 
 
 
 
==========================>>>>>>>>>>>>>> 2
(ffe - fh) min and max: -0.348243, 0.473044
 
Adjoint problem
pT min and max: -0.067247, 5.22567e-032
  -- Solve :
          min -0.05391  max 5.39079e-034
51
        5.225670245e-032        -0.0033784038   -0.006954061119 -0.01068221864  -0.01452024617
        -0.01842765902  -0.02236612684  -0.02629947095  -0.03019365203  -0.03401675009
        -0.03773893815  -0.04133245138  -0.04477155314  -0.04803249901  -0.05109350037
        -0.05393468838  -0.05653807947  -0.05888754339  -0.06096877448  -0.06276926712
        -0.06427829596  -0.06548690165  -0.06638788261  -0.06697579342  -0.06724695029
        -0.06719944407  -0.06683316121  -0.06614981299  -0.06515297343  -0.06384812613
        -0.06224272024  -0.06034623596  -0.0581702596   -0.05572856842  -0.05303722547
        -0.05011468437  -0.04698190421  -0.04366247457  -0.04018275049  -0.03657199756
        -0.0328625467   -0.02908995865  -0.02529319777  -0.02151481482  -0.01780113832
        -0.01420247388  -0.01077331096  -0.007572536235 -0.004663652709 -0.002115003627
        -2.104218845e-016
51
        5.2267743e-032  -0.0033784038   -0.006954061119 -0.01068221864  -0.01452024617
        -0.01842765902  -0.02236612684  -0.02629947095  -0.03019365203  -0.03401675009
        -0.03773893815  -0.04133245138  -0.04477155314  -0.04803249901  -0.05109350037
        -0.05393468838  -0.05653807947  -0.05888754339  -0.06096877448  -0.06276926712
        -0.06427829596  -0.06548690165  -0.06638788261  -0.06697579342  -0.06724695029
        -0.06719944407  -0.06683316121  -0.06614981299  -0.06515297343  -0.06384812613
        -0.06224272024  -0.06034623596  -0.0581702596   -0.05572856842  -0.05303722547
        -0.05011468437  -0.04698190421  -0.04366247457  -0.04018275049  -0.03657199756
        -0.0328625467   -0.02908995865  -0.02529319777  -0.02151481482  -0.01780113832
        -0.01420247388  -0.01077331096  -0.007572536235 -0.004663652709 -0.002115003627
        -2.104218845e-016
beta: 0.029184
 
Solution udh
  -- Solve :
          min -1.14535e-006  max 0.000285425
 
 
rh ===>>> -0.00251037, 0.00123388
alpha: 7.63151
Norm (rh, rh): 1.94043e-007, 1.86573e-007
Mau 1: 6.96251e-009, 6.96814e-009
Mau 2: 1.84584e-008
  -- Solve :
          min -2.78667e-038  max 0.254943
  -- Solve :
          min -2.01339e-034  max 1.39762
 
 
 
 
==========================>>>>>>>>>>>>>> 3
(ffe - fh) min and max: -0.325563, 0.470997
 
Adjoint problem
pT min and max: -0.0662636, 5.2259e-032
  -- Solve :
          min -0.0531498  max 5.31474e-034
51
        5.225902932e-032        -0.003373750063 -0.006929978182 -0.01062665486  -0.01442356105
        -0.01828234064  -0.02216653724  -0.02604161731  -0.02987498175  -0.03363596764
        -0.03729584207  -0.04082778957  -0.04420689471  -0.04741012131  -0.05041628953
        -0.05320605199  -0.0557618702   -0.05806799208  -0.06011043169  -0.0618769519
        -0.06335705081  -0.06454195262  -0.06542460357  -0.06599967356  -0.06626356387
        -0.0662144216   -0.06585216111  -0.06517849292  -0.06419696032  -0.06291298414
        -0.06133391569  -0.05946909831  -0.05732993763  -0.05492998059  -0.05228500343
        -0.04941310875  -0.0463348314   -0.04307325353  -0.03965412842  -0.03610601307
        -0.03246040937  -0.02875191357  -0.02501837372  -0.02130105458  -0.01764480973
        -0.01409826007  -0.01071397817  -0.007548677625 -0.004663406586 -0.002123744353
        -2.104218845e-016
51
        5.22699378e-032 -0.003373750063 -0.006929978182 -0.01062665486  -0.01442356105
        -0.01828234064  -0.02216653724  -0.02604161731  -0.02987498175  -0.03363596764
        -0.03729584207  -0.04082778957  -0.04420689471  -0.04741012131  -0.05041628953
        -0.05320605199  -0.0557618702   -0.05806799208  -0.06011043169  -0.0618769519
        -0.06335705081  -0.06454195262  -0.06542460357  -0.06599967356  -0.06626356387
        -0.0662144216   -0.06585216111  -0.06517849292  -0.06419696032  -0.06291298414
        -0.06133391569  -0.05946909831  -0.05732993763  -0.05492998059  -0.05228500343
        -0.04941310875  -0.0463348314   -0.04307325353  -0.03965412842  -0.03610601307
        -0.03246040937  -0.02875191357  -0.02501837372  -0.02130105458  -0.01764480973
        -0.01409826007  -0.01071397817  -0.007548677625 -0.004663406586 -0.002123744353
        -2.104218845e-016
beta: 0.505269
 
Solution udh
  -- Solve :
          min -0.000193737  max 5.29682e-006
 
 
rh ===>>> -0.00199053, -4.23405e-008
alpha: 2.57211
Norm (rh, rh): 9.80437e-008, 9.49737e-008
Mau 1: 2.41956e-008, 2.42152e-008
Mau 2: 1.39027e-008
  -- Solve :
          min -2.79066e-038  max 0.254449
  -- Solve :
          min -2.01339e-034  max 1.39762
 
 
 
 
==========================>>>>>>>>>>>>>> 4
(ffe - fh) min and max: -0.316581, 0.471
 
Adjoint problem
pT min and max: -0.0667531, 5.22279e-032
  -- Solve :
          min -0.0535872  max 5.35855e-034
51
        5.222794688e-032        -0.003435914943 -0.007046834196 -0.0107915776   -0.0146306902
        -0.01852650195  -0.02244317132  -0.02634671466  -0.03020502358  -0.03398787212
        -0.03766691545  -0.04121568183  -0.04460955936  -0.04782577889  -0.05084339447
        -0.05364326263  -0.05620802137  -0.05852207019  -0.06057155187  -0.06234433701
        -0.06383001195  -0.06501987096  -0.06590691324  -0.06648584527  -0.06675308916
        -0.06670679739  -0.06634687434  -0.06567500507  -0.06469469159  -0.06341129703
        -0.06183209778  -0.05996634405  -0.05782532877  -0.05542246517  -0.05277337299
        -0.04989597351  -0.04681059319  -0.04354007614  -0.04010990514  -0.03654833111
        -0.03288651088  -0.02915865289  -0.02540217058  -0.02165784299  -0.01796998207
        -0.01438660619  -0.01095961909  -0.007744993417 -0.004802958233 -0.002198189116
        -2.104218845e-016
51
        5.223896168e-032        -0.003435914943 -0.007046834196 -0.0107915776   -0.0146306902
        -0.01852650195  -0.02244317132  -0.02634671466  -0.03020502358  -0.03398787212
        -0.03766691545  -0.04121568183  -0.04460955936  -0.04782577889  -0.05084339447
        -0.05364326263  -0.05620802137  -0.05852207019  -0.06057155187  -0.06234433701
        -0.06383001195  -0.06501987096  -0.06590691324  -0.06648584527  -0.06675308916
        -0.06670679739  -0.06634687434  -0.06567500507  -0.06469469159  -0.06341129703
        -0.06183209778  -0.05996634405  -0.05782532877  -0.05542246517  -0.05277337299
        -0.04989597351  -0.04681059319  -0.04354007614  -0.04010990514  -0.03654833111
        -0.03288651088  -0.02915865289  -0.02540217058  -0.02165784299  -0.01796998207
        -0.01438660619  -0.01095961909  -0.007744993417 -0.004802958233 -0.002198189116
        -2.104218845e-016
beta: 0.00567728
 
Solution udh
  -- Solve :
          min -1.32223e-042  max 1.79338e-005
 
 
rh ===>>> 3.05477e-009, 0.000159932
alpha: 2.3723
Norm (rh, rh): 5.56622e-010, 5.14483e-010
Mau 1: 1.86819e-010, 1.86952e-010
Mau 2: 4.76825e-011
  -- Solve :
          min -2.79097e-038  max 0.254491
  -- Solve :
          min -2.01339e-034  max 1.39762
 
 
 
 
==========================>>>>>>>>>>>>>> 5
(ffe - fh) min and max: -0.316913, 0.470981
 
Adjoint problem
pT min and max: -0.0667109, 5.223e-032
  -- Solve :
          min -0.0535508  max 5.3549e-034
51
        5.222997022e-032        -0.003431868274 -0.007039060188 -0.01078037052  -0.01461632134
        -0.01850922168  -0.02242321084  -0.02632428777  -0.03018032826  -0.03396109199
        -0.03763822118  -0.04118523239  -0.04457750323  -0.04779225519  -0.050808534
        -0.05360718882  -0.05617085125  -0.05848391522  -0.06053251881  -0.06230452866
        -0.06378952792  -0.06497880841  -0.06586536757  -0.0664439108   -0.06671085984
        -0.06666436742  -0.06630433887  -0.06563246086  -0.06465223771  -0.06336903554
        -0.06179013445  -0.05992478909  -0.05778429762  -0.05538207928  -0.05273376069
        -0.04985727085  -0.04677294493  -0.04350363674  -0.04007483978  -0.03651481684
        -0.03285473781  -0.02912882547  -0.02537450896  -0.02163258446  -0.01794738263
        -0.01436694218  -0.01094318894  -0.007732119565 -0.004793989069 -0.002193501124
        -2.104218845e-016
51
        5.224097674e-032        -0.003431868274 -0.007039060188 -0.01078037052  -0.01461632134
        -0.01850922168  -0.02242321084  -0.02632428777  -0.03018032826  -0.03396109199
        -0.03763822118  -0.04118523239  -0.04457750323  -0.04779225519  -0.050808534
        -0.05360718882  -0.05617085125  -0.05848391522  -0.06053251881  -0.06230452866
        -0.06378952792  -0.06497880841  -0.06586536757  -0.0664439108   -0.06671085984
        -0.06666436742  -0.06630433887  -0.06563246086  -0.06465223771  -0.06336903554
        -0.06179013445  -0.05992478909  -0.05778429762  -0.05538207928  -0.05273376069
        -0.04985727085  -0.04677294493  -0.04350363674  -0.04007483978  -0.03651481684
        -0.03285473781  -0.02912882547  -0.02537450896  -0.02163258446  -0.01794738263
        -0.01436694218  -0.01094318894  -0.007732119565 -0.004793989069 -0.002193501124
        -2.104218845e-016
beta: 0.0741484
 
Solution udh
  -- Solve :
          min -4.28204e-006  max 9.92106e-043
 
 
rh ===>>> -2.03945e-005, 2.7091e-005
alpha: 6.9186
Norm (rh, rh): 4.12726e-011, 3.71991e-011
Mau 1: 2.38905e-012, 2.39075e-012
Mau 2: 3.57471e-012
  -- Solve :
          min -2.79031e-038  max 0.254475
  -- Solve :
          min -2.01339e-034  max 1.39762
 
 
 
 
==========================>>>>>>>>>>>>>> 6
(ffe - fh) min and max: -0.317172, 0.471002
 
Adjoint problem
pT min and max: -0.0667268, 5.22298e-032
  -- Solve :
          min -0.0535634  max 5.35617e-034
51
        5.22297632e-032 -0.003432282306 -0.007040044717 -0.01078204979  -0.01461879125
        -0.01851255318  -0.0224274531   -0.02632947091  -0.03018646585  -0.03396818325
        -0.03764625292  -0.04119418075  -0.04458733515  -0.04780292976  -0.05082000363
        -0.05361940022  -0.0561837463   -0.05849743172  -0.06054659113  -0.06231908829
        -0.06380450398  -0.06499412802  -0.06588095623  -0.06645969275  -0.0667267583
        -0.06668030493  -0.06632023751  -0.06564824256  -0.06466782453  -0.06338434999
        -0.06180509984  -0.05993932995  -0.05779834013  -0.05539555182  -0.05274659447
        -0.04986940059  -0.04678430972  -0.04351418092  -0.04008451409  -0.03652357963
        -0.03286255644  -0.0291356779   -0.02538038556  -0.02163749003  -0.01795133865
        -0.01436998935  -0.01094538998  -0.007733562322 -0.004794789963 -0.002193808928
        -2.104218845e-016
51
        5.224077209e-032        -0.003432282306 -0.007040044717 -0.01078204979  -0.01461879125
        -0.01851255318  -0.0224274531   -0.02632947091  -0.03018646585  -0.03396818325
        -0.03764625292  -0.04119418075  -0.04458733515  -0.04780292976  -0.05082000363
        -0.05361940022  -0.0561837463   -0.05849743172  -0.06054659113  -0.06231908829
        -0.06380450398  -0.06499412802  -0.06588095623  -0.06645969275  -0.0667267583
        -0.06668030493  -0.06632023751  -0.06564824256  -0.06466782453  -0.06338434999
        -0.06180509984  -0.05993932995  -0.05779834013  -0.05539555182  -0.05274659447
        -0.04986940059  -0.04678430972  -0.04351418092  -0.04008451409  -0.03652357963
        -0.03286255644  -0.0291356779   -0.02538038556  -0.02163749003  -0.01795133865
        -0.01436998935  -0.01094538998  -0.007733562322 -0.004794789963 -0.002193808928
        -2.104218845e-016
beta: 0.55921
 
Solution udh
  -- Solve :
          min -1.45731e-007  max 2.65193e-006
 
 
rh ===>>> 6.43565e-010, 3.16355e-005
alpha: 3.03136
Norm (rh, rh): 2.30801e-011, 2.10655e-011
Mau 1: 4.587e-012, 4.5908e-012
Mau 2: 3.02297e-012
  -- Solve :
          min -2.79023e-038  max 0.254483
  -- Solve :
          min -2.01339e-034  max 1.39762
 
 
 
 
==========================>>>>>>>>>>>>>> 7
(ffe - fh) min and max: -0.317332, 0.471002
 
Adjoint problem
pT min and max: -0.0667189, 5.22303e-032
  -- Solve :
          min -0.0535564  max 5.35546e-034
51
        5.223028158e-032        -0.003431245548 -0.00703810103  -0.01077931377  -0.01461536381
        -0.01850852302  -0.02242289797  -0.02632445882  -0.03018105614  -0.03396242757
        -0.0376401961   -0.0411878616   -0.04458078721  -0.0477961819   -0.05081308067
        -0.05361232346  -0.05617653399  -0.05849009952  -0.06053915247  -0.06231155477
        -0.06379688567  -0.0649864338   -0.06587319408  -0.06645187001  -0.06671888195
        -0.06667238183  -0.0663122747   -0.06564024748  -0.06465980532  -0.06337631573
        -0.06179706088  -0.0599312982   -0.0577903294   -0.05538757818  -0.05273867665
        -0.04986156042  -0.04677657256  -0.04350657624  -0.04007707602  -0.03651634757
        -0.03285557577  -0.02912900076  -0.02537407167  -0.0216316076   -0.01794596542
        -0.01436521368  -0.01094131206  -0.007730295476 -0.004792462095 -0.002192564071
        -2.104218845e-016
51
        5.224128873e-032        -0.003431245548 -0.00703810103  -0.01077931377  -0.01461536381
        -0.01850852302  -0.02242289797  -0.02632445882  -0.03018105614  -0.03396242757
        -0.0376401961   -0.0411878616   -0.04458078721  -0.0477961819   -0.05081308067
        -0.05361232346  -0.05617653399  -0.05849009952  -0.06053915247  -0.06231155477
        -0.06379688567  -0.0649864338   -0.06587319408  -0.06645187001  -0.06671888195
        -0.06667238183  -0.0663122747   -0.06564024748  -0.06465980532  -0.06337631573
        -0.06179706088  -0.0599312982   -0.0577903294   -0.05538757818  -0.05273867665
        -0.04986156042  -0.04677657256  -0.04350657624  -0.04007707602  -0.03651634757
        -0.03285557577  -0.02912900076  -0.02537407167  -0.0216316076   -0.01794596542
        -0.01436521368  -0.01094131206  -0.007730295476 -0.004792462095 -0.002192564071
        -2.104218845e-016
beta: 0.021036
 
Solution udh
  -- Solve :
          min -5.08703e-007  max 4.2736e-044
 
 
rh ===>>> -4.67227e-006, -9.13814e-011
alpha: 2.60901
Norm (rh, rh): 4.85511e-013, 4.20432e-013
Mau 1: 1.49112e-013, 1.49217e-013
Mau 2: 3.68731e-014
  -- Solve :
          min -2.79022e-038  max 0.254482
  -- Solve :
          min -2.01339e-034  max 1.39762
 
 
 
 
==========================>>>>>>>>>>>>>> 8
(ffe - fh) min and max: -0.317322, 0.471003
 
Adjoint problem
pT min and max: -0.0667202, 5.22302e-032
  -- Solve :
          min -0.0535575  max 5.35557e-034
51
        5.223021994e-032        -0.003431368829 -0.007038338383 -0.01077965665  -0.01461580429
        -0.01850905374  -0.02242351207  -0.02632514994  -0.03018181834  -0.0339632553
        -0.03764108417  -0.04118880514  -0.04458178164  -0.04779722292  -0.0508141642
        -0.05361344562  -0.0561776911   -0.05849128804  -0.060540369    -0.06231279602
        -0.06379814844  -0.06498771497  -0.06587449056  -0.06645317875  -0.06672019991
        -0.06667370595  -0.06631360191  -0.06564157465  -0.06466112924  -0.06337763311
        -0.06179836832  -0.05993259217  -0.05779160621  -0.05538883399  -0.05273990738
        -0.04986276178  -0.04677774003  -0.043507705    -0.04007816094  -0.03651738319
        -0.03285655627  -0.0291299199   -0.02537492277  -0.02163238351  -0.01794665847
        -0.01436581564  -0.01094181408  -0.00773068806  -0.004792735047 -0.002192706433
        -2.104218845e-016
51
        5.224122735e-032        -0.003431368829 -0.007038338383 -0.01077965665  -0.01461580429
        -0.01850905374  -0.02242351207  -0.02632514994  -0.03018181834  -0.0339632553
        -0.03764108417  -0.04118880514  -0.04458178164  -0.04779722292  -0.0508141642
        -0.05361344562  -0.0561776911   -0.05849128804  -0.060540369    -0.06231279602
        -0.06379814844  -0.06498771497  -0.06587449056  -0.06645317875  -0.06672019991
        -0.06667370595  -0.06631360191  -0.06564157465  -0.06466112924  -0.06337763311
        -0.06179836832  -0.05993259217  -0.05779160621  -0.05538883399  -0.05273990738
        -0.04986276178  -0.04677774003  -0.043507705    -0.04007816094  -0.03651738319
        -0.03285655627  -0.0291299199   -0.02537492277  -0.02163238351  -0.01794665847
        -0.01436581564  -0.01094181408  -0.00773068806  -0.004792735047 -0.002192706433
        -2.104218845e-016
beta: 0.0968317
 
Solution udh
  -- Solve :
          min -3.1934e-044  max 1.45715e-007
 
 
rh ===>>> -6.52256e-007, 7.22055e-007
alpha: 6.23247
Norm (rh, rh): 4.70129e-014, 3.97327e-014
Mau 1: 3.94957e-015, 3.95223e-015
Mau 2: 3.59099e-015
  -- Solve :
          min -2.79023e-038  max 0.254482
  -- Solve :
          min -2.01339e-034  max 1.39762
 
 
 
 
==========================>>>>>>>>>>>>>> 9
(ffe - fh) min and max: -0.317316, 0.471002
 try getConsole D:\Study\HUST\FEM\heatsource\FreeFem++\HeatSource1D_QT.edp
